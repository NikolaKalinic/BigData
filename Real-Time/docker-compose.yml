version: "3"

services:
  spark-master-rt:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master-rt
    ports:
      - 8085:8085
      - 7078:7078
    environment:
      - PYSPARK_PYTHON=python3
    env_file:
      - ./hadoop.env
    volumes:
      - ./consumer/consumer.py:/consumer.py
    networks:
      - asvsp

  spark-worker1-rt:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker1-rt
    depends_on:
      - spark-master-rt
    environment:
      - SPARK_MASTER=spark://spark-master-rt:7078
    ports:
      - 8086:8086
    env_file:
      - ./hadoop.env
    networks:
      - asvsp

  zoo1:
    image: confluentinc/cp-zookeeper:4.1.3-1
    container_name: zoo1
    tmpfs: "/datalog"
    ports:
      - "2181:2181"
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - asvsp

  kafka1:
    image: confluentinc/cp-kafka:4.1.3-1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - asvsp

  producer1:
    build: ./producer
    container_name: kafka_producer_1
    restart: always
    environment:
      KAFKA_BROKER: "kafka1:19092"
    depends_on:
      - kafka1
    networks:
      - asvsp
volumes:
  zoo1:
  kafka1:

networks:
  asvsp:
    external: true
